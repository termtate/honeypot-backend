import pydantic
from pydantic import ConfigDict
from sqlalchemy.orm import DeclarativeBase, MappedAsDataclass, Mapped, mapped_column


class Base(
        MappedAsDataclass,  # 可转换为dataclass
        DeclarativeBase,  # sqlalchemy orm 声明式基类
        dataclass_callable=pydantic.dataclasses.dataclass(config=ConfigDict(
            from_attributes=True)),  # 与pydantic集成
):
    """
    数据库 orm基类
    """
    id: Mapped[int] = mapped_column(
        autoincrement=True,
        unique=True,
        primary_key=True,
        init=
        False,  # https://stackoverflow.com/questions/77452233/instantiated-a-sqlalchemy-declarative-mapped-class-requires-the-autogenerated-an
    )